name: CI/CD Pipeline
on:
  push:
    branches: [main]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Debug Host Environment Before Build
      run: |
        echo "Current working directory on host:"
        pwd
        echo "Contents of current directory on host:"
        ls -la
        echo "Contents of nginx/ on host:"
        ls -la nginx/ || echo "nginx/ directory not found on host"
        echo "Contents of themes/ on host:"
        ls -la themes/ || echo "themes/ directory not found on host"
        echo "Contents of themes/beautifulhugo/ on host:"
        ls -la themes/beautifulhugo/ || echo "themes/beautifulhugo/ not found or empty on host"
        echo "Contents of .git/ on host:"
        ls -la .git/ || echo ".git/ not found on host" # Проверяем .git
        echo "Contents of .gitmodules/ on host:"
        cat .gitmodules || echo ".gitmodules not found on host" # Проверяем .gitmodules

    - name: Build the Docker image manually (NO CACHE)
      run: |
        # Этот шаг выполняется в корне репозитория
        docker build -t portfolio-site:latest . --no-cache --progress=plain



    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          REPO_PATH="/opt/portfolio-site" # Выбираем постоянное место для репозитория, не /tmp
          
          # Установим docker-compose, если его нет (или обновим)
          sudo apt update && sudo apt install -y docker-compose
          
          # Клонируем или обновляем репозиторий в постоянном месте
          if [ -d "$REPO_PATH/.git" ]; then
            echo "Repository exists. Pulling latest changes..."
            sudo git -C "$REPO_PATH" pull
          else
            echo "Cloning repository to $REPO_PATH..."
            sudo git clone https://github.com/zhenyapetko/portfolio-site.git "$REPO_PATH"
          fi
          
          # Выполняем Docker Login
          sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          
          # Переходим в директорию репозитория и запускаем docker-compose
          echo "Building and deploying from $REPO_PATH..."
          # `cd $REPO_PATH` гарантирует, что docker-compose будет использовать правильный контекст.
          # `-f docker-compose.yml` не нужен, если вы уже в этой директории.
          sudo bash -c "cd $REPO_PATH && docker-compose build portfolio-site && docker-compose up -d"
          # Если вы хотите, чтобы docker-compose пересоздавал контейнер при обновлении образа:
          # sudo bash -c "cd $REPO_PATH && docker-compose build portfolio-site && docker-compose up -d --force-recreate portfolio-site"
          
          echo "Deployment complete."