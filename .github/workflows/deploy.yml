name: CI/CD Pipeline to EC2

on:
  push:
    branches: [main] # –ó–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏ –ø—É—à–µ –≤ –≤–µ—Ç–∫—É main

jobs:
  deploy:
    runs-on: ubuntu-latest


    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # –ü–æ–ª–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –¥–ª—è Git Submodules, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3 # –ë–æ–ª–µ–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSH
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to Server via SSH
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        REPO_REMOTE_URL: "https://github.com/zhenyapetko/portfolio-site.git" # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—É–±–ª–∏—á–Ω—ã–π URL –≤–∞—à–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è

      run: |
        set -e # –í—ã–π—Ç–∏ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ, –µ—Å–ª–∏ –ª—é–±–∞—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –Ω–µ—É–¥–∞—á–µ–π

        echo "Connecting to ${{ env.SSH_USERNAME }}@${{ env.SSH_HOST }}"

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ,
        # –≤ –≤–∏–¥–µ –æ–¥–Ω–æ–π –±–æ–ª—å—à–æ–π —Å—Ç—Ä–æ–∫–∏.
        # –ó–¥–µ—Å—å –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–º–≤–æ–ª—ã –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ (\n) –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
        # –∏ —ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–∞–≤—ã—á–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –Ω—É–∂–Ω—ã –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–∞–Ω–¥.
        SSH_SCRIPT="
          REPO_PATH=\"/opt/portfolio-site\" # –ü—É—Ç—å, –≥–¥–µ Docker Compose –ø—Ä–æ–µ–∫—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
          
          # --- –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è ---
          if [ ! -d \"\$REPO_PATH\" ]; then
            echo \"Cloning repository to \$REPO_PATH...\"
            git clone \"\$REPO_REMOTE_URL\" \"\$REPO_PATH\" || { echo \"Failed to clone repository\"; exit 1; }
          fi

          echo "Cleaning up old Docker resources..."
        
          docker system prune -f  # –£–¥–∞–ª—è–µ—Ç –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ (dangling) –æ–±—Ä–∞–∑—ã, –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, —Å–µ—Ç–∏ –∏ build cache
          docker volume prune -f  # –£–¥–∞–ª—è–µ—Ç –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ç–æ–º–∞
          docker builder prune -f
          
          echo \"Entering project directory: \$REPO_PATH\"
          cd \"\$REPO_PATH\" || { echo \"Failed to change directory to \$REPO_PATH\"; exit 1; }

          echo \"Pulling latest changes from Git...\"
          git pull origin main || { echo \"Failed to pull latest changes\"; exit 1; }
          
          # --- Docker Compose –¥–µ–π—Å—Ç–≤–∏—è ---
          echo \"Stopping existing services...\"
          docker-compose down || echo \"No running services to stop or failed gracefully.\"
          
          echo \"Building services...\"
          docker-compose build --no-cache || { echo \"Failed to build Docker images\"; exit 1; }
          
          echo \"Starting services...\"
          docker-compose up -d --force-recreate || { echo \"Failed to start Docker Compose services\"; exit 1; }
          
          echo \"Deployment successful.\"
        "
        # –ü–µ—Ä–µ–¥–∞—á–∞ —Å–∫—Ä–∏–ø—Ç–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π –≤ SSH, –≤—ã–ø–æ–ª–Ω—è—è –æ–±—Ä–µ–∑–∫—É –ø—Ä–æ–±–µ–ª–æ–≤
        # –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞–∫ Bash-—Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ.
        # Telegram —Å–æ–æ–±—â–µ–Ω–∏—è –∑–¥–µ—Å—å –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å!
        ssh -o StrictHostKeyChecking=no ${{ env.SSH_USERNAME }}@${{ env.SSH_HOST }} "bash -c '$(echo "$SSH_SCRIPT" | sed -e 's/^[[:space:]]*//')'"

    # --- Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —à–∞–≥–∏, –∫–∞–∫ –∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å ---
    - name: Send Telegram Notification (Success)
      if: success()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TG_CHAT_ID }}
        token: ${{ secrets.TG_BOT_TOKEN }}
        format: markdown # –£–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç Markdown
        message: |
          ‚ú® *Deployment Successful!* ‚ú®
          
          ---
          
          üöÄ *–ü—Ä–æ–µ–∫—Ç:* `{{ github.repository }}`
          üåø *–í–µ—Ç–∫–∞:* `{{ github.ref_name }}`
          üì¶ *–ö–æ–º–º–∏—Ç:* `{{ github.sha }}`
          
          ---
          
          üåê *–í–∞—à —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω:*
          [–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç](http://${{ secrets.SSH_HOST }})
          
          üìä *–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Grafana:*
          [Grafana Dashboard](http://${{ secrets.SSH_HOST }}:3000)
          
          üìà *–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Prometheus:*
          [Prometheus Status](http://${{ secrets.SSH_HOST }}:9090)
          
          ---
          
          ‚úÖ *–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç!*
    
    - name: Send Telegram Notification (Failure)
      if: failure()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TG_CHAT_ID }}
        token: ${{ secrets.TG_BOT_TOKEN }}
        format: markdown # –¢–∞–∫–∂–µ —É–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç Markdown –¥–ª—è –æ—à–∏–±–æ–∫
        message: |
          üö® *Deployment Failed!* üö®
          
          ---
          
          ‚ùå *–ü—Ä–æ–µ–∫—Ç:* `{{ github.repository }}`
          üåø *–í–µ—Ç–∫–∞:* `{{ github.ref_name }}`
          üì¶ *–ö–æ–º–º–∏—Ç:* `{{ github.sha }}`
          
          ---
          
          üßê *–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:*
          [GitHub Actions Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          
          ---
          
          ‚ö†Ô∏è *–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –¥–µ–ø–ª–æ—è. –°—Ä–æ—á–Ω–æ –ø—Ä–∏–º–∏—Ç–µ –º–µ—Ä—ã!*