server {
    listen 80;
    listen [::]:80;
    server_name e-petko.dev www.e-petko.dev;

    # Перенаправляем весь HTTP трафик на HTTPS
    return 301 https://$host$request_uri;

    # Этот блок нужен для Certbot, но он останется незатронутым редиректом выше
    # так как Certbot делает запрос к конкретному URI
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name e-petko.dev www.e-petko.dev;

    # Определения SSL/TLS
    ssl_certificate /etc/letsencrypt/live/e-petko.dev/fullchain.pem; # Путь к полному цепочке сертификатов
    ssl_certificate_key /etc/letsencrypt/live/e-petko.dev/privkey.pem; # Путь к приватному ключу

    # Рекомендуемые настройки SSL для безопасности и производительности
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
    #ssl_dhparam /etc/nginx/dhparam.pem; # Будет создан позже, если это необходимо для Perfect Forward Secrecy

    # ОСНОВНОЙ САЙТ - прокси на Python сервер
    location / {
        proxy_pass http://website:8000;  # ✅ Прокси на наш сайт
        try_files $uri $uri/ =404;       # ✅ Оставляем try_files для статики
    }

    # Grafana
    location /grafana/ {
        proxy_pass http://grafana:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Prometheus
    location /prometheus/ {
        proxy_pass http://prometheus:9090/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Node exporter
    location /metrics/ {
        proxy_pass http://node-exporter:9100/metrics;
    }
}