---
- hosts: webservers
  become: yes # Выполнять все задачи от имени root
  vars:
    docker_username: "{{ lookup('env', 'DOCKER_USERNAME') }}"
    docker_password: "{{ lookup('env', 'DOCKER_PASSWORD') }}"
    github_repo: "https://github.com/zhenyapetko/portfolio-site.git"
    project_root: /opt/portfolio-site # Определяем корневую папку проекта
    cert_dir: "{{ project_root }}/certs" # Папка для сертификатов Let's Encrypt
    nginx_conf_src: "{{ project_root }}/nginx/nginx.conf" # Путь к nginx.conf в репозитории, если он там
    nginx_conf_dest: "{{ project_root }}/nginx.conf" # Место куда Nginx ожидает конфиг внутри/рядом с compose

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600 # Обновить кэш, если ему больше часа

    - name: Upgrade all packages
      apt:
        upgrade: yes

    - name: Install required packages (git, docker.io, docker-compose-plugin)
      apt:
        name: 
          - git
          - docker.io
          - python3-pip # Необходим для docker_login модуля, если используется
          - docker-compose-plugin # Установка Docker Compose V2
        state: present
        update_cache: yes # Обновит кэш перед установкой

    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add 'ubuntu' user to the docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Create project root directory if it does not exist
      file:
        path: "{{ project_root }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Clone or update the repository
      git:
        repo: "{{ github_repo }}"
        dest: "{{ project_root }}"
        version: main
        accept_hostkey: yes # Принимает ключ хоста GitHub автоматически
      become_user: ubuntu # Клонируем от имени пользователя ubuntu


    - name: Run docker-compose build and up
      # 'docker compose' (с пробелом) для V2
      community.docker.docker_compose: # Используем специализированный модуль ansible для docker compose
        project_src: "{{ project_root }}" # root directory of the compose project
        state: present # Заменит 'up -d' в данном случае
        build: yes # Собираем образы из Dockerfile, если они есть
        remove_volumes: no # Не удалять тома при перезапуске (важно для Let's Encrypt)
